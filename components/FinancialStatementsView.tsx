import React from 'react';
import { PnlData, BalanceSheetData } from '../types';

interface FinancialStatementsViewProps {
    pnlData: PnlData;
    balanceSheetData: BalanceSheetData;
}

const Section: React.FC<{title: string, data: {[key: string]: number}, total: number, titleClass: string}> = ({title, data, total, titleClass}) => (
     <div className="mb-6">
        <h3 className={`text-lg font-semibold mb-2 ${titleClass}`}>{title}</h3>
        {Object.entries(data).map(([account, amount]) => (
            <div key={account} className="flex justify-between py-1 border-b border-gray-200 dark:border-slate-700/50">
                <span>{account}</span>
                {/* FIX: Cast amount to number because Object.entries can produce 'unknown' values from indexed types. */}
                <span className="font-mono">R {(amount as number).toFixed(2)}</span>
            </div>
        ))}
        <div className="flex justify-between py-2 font-bold mt-2">
            <span>Total {title}</span>
            <span className="font-mono">R {total.toFixed(2)}</span>
        </div>
    </div>
);

const FinancialStatementsView: React.FC<FinancialStatementsViewProps> = ({ pnlData, balanceSheetData }) => {
    const { assets, liabilities, equity, totals } = balanceSheetData;
    const isBalanced = totals.assets.toFixed(2) === totals.liabilitiesAndEquity.toFixed(2);

    return (
        <div>
            <div className="bg-white dark:bg-slate-800/50 rounded-lg shadow-lg p-4 md:p-6 mb-6">
                <h2 className="text-xl font-bold text-teal-600 dark:text-teal-300 mb-4">Statement of Comprehensive Income (Profit & Loss)</h2>
                <p className="text-sm text-gray-500 dark:text-slate-400 mb-4">For the period ending [Date]</p>
                
                <Section title="Revenue" data={pnlData.revenues} total={pnlData.totalRevenue} titleClass="text-green-600 dark:text-green-400" />
                <Section title="Expenses" data={pnlData.expenses} total={pnlData.totalExpenses} titleClass="text-red-600 dark:text-red-400" />
                
                <div className={`flex justify-between py-3 font-bold text-lg rounded-md px-3 mt-4 ${pnlData.netProfit >= 0 ? 'bg-green-100 dark:bg-green-500/20 text-green-700 dark:text-green-300' : 'bg-red-100 dark:bg-red-500/20 text-red-700 dark:text-red-300'}`}>
                    <span>Net Profit / (Loss) for the period</span>
                    <span className="font-mono">R {pnlData.netProfit.toFixed(2)}</span>
                </div>
            </div>

            <div className="bg-white dark:bg-slate-800/50 rounded-lg shadow-lg p-4 md:p-6">
                 <h2 className="text-xl font-bold text-teal-600 dark:text-teal-300 mb-4">Statement of Financial Position (Balance Sheet)</h2>
                 <p className="text-sm text-gray-500 dark:text-slate-400 mb-4">As at [Date]</p>
                 
                 <Section title="Assets" data={assets} total={totals.assets} titleClass="text-blue-600 dark:text-blue-400" />
                 {/* FIX: Explicitly cast Object.values result to number[] to ensure type safety in reduce. */}
                 <Section title="Liabilities" data={liabilities} total={(Object.values(liabilities) as number[]).reduce((a, b) => a + b, 0)} titleClass="text-orange-600 dark:text-orange-400" />
                 {/* FIX: Explicitly cast Object.values result to number[] to ensure type safety in reduce. */}
                 <Section title="Equity" data={equity} total={(Object.values(equity) as number[]).reduce((a, b) => a + b, 0)} titleClass="text-purple-600 dark:text-purple-400" />

                 <div className={`flex justify-between py-3 font-bold text-lg rounded-md px-3 mt-4 ${isBalanced ? 'bg-green-100 dark:bg-green-500/20 text-green-700 dark:text-green-300' : 'bg-red-100 dark:bg-red-500/20 text-red-700 dark:text-red-300'}`}>
                    <span>Total Liabilities & Equity</span>
                    <span className="font-mono">R {totals.liabilitiesAndEquity.toFixed(2)}</span>
                </div>

                 <p className="text-xs text-gray-400 dark:text-slate-500 mt-4">*Disclaimer: This is a simplified financial statement generated by AI. Please consult a professional accountant for official SARS submissions.</p>
            </div>
        </div>
    );
};

export default FinancialStatementsView;