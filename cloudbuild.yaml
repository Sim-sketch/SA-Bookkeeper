steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--tag=gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--build-arg'
      - 'API_KEY=${_API_KEY}'
      - '--build-arg'
      - 'SUPABASE_URL=${_SUPABASE_URL}'
      - '--build-arg'
      - 'SUPABASE_ANON_KEY=${_SUPABASE_ANON_KEY}'
      - '.'
    secretEnv: ['_API_KEY', '_SUPABASE_URL', '_SUPABASE_ANON_KEY']

  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated' # Use '--no-allow-unauthenticated' for private services

# Make the API Key from Secret Manager available to the build
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/${_SECRET_API_KEY_NAME}/versions/latest
    env: '_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/${_SECRET_SUPABASE_URL_NAME}/versions/latest
    env: '_SUPABASE_URL'
  - versionName: projects/$PROJECT_ID/secrets/${_SECRET_SUPABASE_ANON_KEY_NAME}/versions/latest
    env: '_SUPABASE_ANON_KEY'


# Define the images to be pushed to the registry
images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'

# Default timeout for the build
timeout: '1200s'